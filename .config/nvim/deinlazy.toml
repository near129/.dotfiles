[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertCharPre'
on_ft = 'snippet'
depends = ['neosnippet-snippets', 'context_filetype']
hook_source = '''
  imap <C-k>     <Plug>(neosnippet_jump_or_expand)
  smap <C-k>     <Plug>(neosnippet_jump_or_expand)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
  let g:neosnippet#enable_snipmate_compatibility = 1
  let g:neosnippet#enable_completed_snippet = 1
  " let g:neosnippet#enable_complete_done = 1
  let g:neosnippet#expand_word_boundary = 1
  let g:neosnippet#snippets_directory = '~/.config/nvim/snippets'
  " SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
"imap <expr><TAB>
" \ pumvisible() ? "\<C-n>" :
" \ neosnippet#expandable_or_jumpable() ?
" \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
" インデントをうまく反映させる
au BufNewFile, BufRead *.snip set noexpandtab
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh', 'sh']

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#sources#jedi#python_path = '/Users/ryotaro/.pyenv/shims/python'

setlocal dictionary+=/usr/share/dict/words

inoremap <expr><C-h> deoplete#smart_close_popup()."<C-h>"
inoremap <expr><BS> deoplete#smart_close_popup()."<C-h>"
inoremap <expr><tab> pumvisible() ? "\<C-n>" :
    \ neosnippet#expandable_or_jumpable() ?
    \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"

call deoplete#custom#option({
    \ 'auto_complete': v:true,
    \ 'min_pattern_length': 1,
    \ 'auto_complete_delay': 0,
    \ 'auto_refresh_delay': 1,
    \ 'refresh_always': v:true,
    \ 'smart_case': v:true,
    \ 'camel_case': v:false,
    \ 'max_list': 10,
    \ })
"call deoplete#custom#source('dictionary', 'min_pattern_length', 4)
call deoplete#custom#option('sources', {
\ 'python': ['neosnippet', 'jedi',  'dictionary', 'file'],
\ 'vim': ['vim', 'buffer', 'dictionary', 'file'],
\ 'tex': ['omni', 'file', 'buffer', 'dictionary'],
\ '_': ['file', 'dictionary'],
\})
" 一つ目の候補を選択状態にする
"set completeopt+=noinsert
" previw windowを消す(関数などの説明が書かれているウィンドウが出る)
set completeopt-=preview
call deoplete#enable()
'''

[[plugins]]
repo = 'deoplete-plugins/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'deoplete-plugins/deoplete-dictionary'
on_event = 'InsertEnter'

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = '''
let g:fruzzy#sortonempty = 0
let g:fruzzy#use_native = 1
'''
hook_post_update = 'call fruzzy#install()'

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_post_source = '''
call deoplete#custom#var('omni', 'input_patterns', {
    \ 'tex' : g:vimtex#re#deoplete
    \})
'''
